<UserControl xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml" x:Class="ShowCase.ShowCaseSample"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ShowCase"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <local:ViewModel x:Key="viewmodel" />
        <local:DiscountConverter x:Key="DiscountConverter" />
        <local:ColorConverter x:Key="ColorConverter" />
        <Point x:Key="Condition1" X="0" Y="10" />
        <Point x:Key="Condition2" X="10" Y="20" />
        <Point x:Key="Condition3" X="20" Y="100" />
    </UserControl.Resources>
    <Grid DataContext="{StaticResource viewmodel}" x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal">
            <TextBlock FontWeight="Bold" Text="Theme:" Margin="5" VerticalAlignment="Center"/>
            <c1:C1ComboBox x:Name="cmbTheme" IsEditable="False" SelectedItemChanged="cmbTheme_SelectedItemChanged" Width="150" Margin="5" Height="30" VerticalContentAlignment="Center" />
        </StackPanel>
        <c1:C1SimplifiedRibbon BorderBrush="Transparent"  Grid.Row="1">
            <c1:C1SimplifiedTabItem Header="Data" >
                <c1:C1SimplifiedRibbonGroup  BorderBrush="Transparent">
                    <c1:C1SimplifiedRibbonGroup.GroupSizeDefinitions>
                        <c1:C1ToolbarGroupSizeDefinition>
                            <c1:C1ToolbarControlSize>Large</c1:C1ToolbarControlSize>
                        </c1:C1ToolbarGroupSizeDefinition>
                    </c1:C1SimplifiedRibbonGroup.GroupSizeDefinitions>
                    <Label Content="Data Size: "></Label>
                    <c1:C1ComboBox Width="100" Margin="0 0 4 0"  Height="30" VerticalContentAlignment="Center"
                                   ItemsSource="{Binding DataSize}"
                                   SelectedItem="{Binding SelectedSize, Mode=TwoWay}">
                        <c1:C1ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=DisplayName}"/>
                            </DataTemplate>
                        </c1:C1ComboBox.ItemTemplate>
                    </c1:C1ComboBox>
                </c1:C1SimplifiedRibbonGroup>
                <c1:C1SimplifiedRibbonGroup  BorderBrush="Transparent">
                    <c1:C1SimplifiedRibbonGroup.GroupSizeDefinitions>
                        <c1:C1ToolbarGroupSizeDefinition>
                            <c1:C1ToolbarControlSize>Large</c1:C1ToolbarControlSize>
                        </c1:C1ToolbarGroupSizeDefinition>
                    </c1:C1SimplifiedRibbonGroup.GroupSizeDefinitions>
                    <Label Content="Search: "></Label>
                    <c1:C1TextBoxBase x:Name="filter"  Width="200" HorizontalAlignment="Left" Height="30" VerticalContentAlignment="Center"/>
                </c1:C1SimplifiedRibbonGroup>
                <c1:C1SimplifiedRibbonGroup Header="Filtering">
                    <c1:C1SimplifiedRibbonGroup.GroupSizeDefinitions>
                        <c1:C1ToolbarGroupSizeDefinition>
                            <c1:C1ToolbarControlSize>Large</c1:C1ToolbarControlSize>
                        </c1:C1ToolbarGroupSizeDefinition>
                    </c1:C1SimplifiedRibbonGroup.GroupSizeDefinitions>
                    <c1:C1ToolbarDropDown ToolTipService.ToolTip="Open">
                        <c1:C1ToolbarDropDown.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image  Source="/Showcase;component/Resources/Images/ConditionalFormating.png"  Height="20"/>
                                <Label Content=" Conditional Formating"></Label>
                            </StackPanel>
                        </c1:C1ToolbarDropDown.Header>
                        <c1:C1ToolbarDropDown.Menu>
                            <ContextMenu>
                                <MenuItem Name="Condition1" IsCheckable="True" Header="Discount &lt; 10%" Click="MenuItem_ConditionalFormating_Click" CommandParameter="{StaticResource Condition1}"></MenuItem>
                                <MenuItem Name="Condition2" IsCheckable="True" Header="Discount from 10 to 20%" Click="MenuItem_ConditionalFormating_Click" CommandParameter="{StaticResource Condition2}"></MenuItem>
                                <MenuItem Name="Condition3" IsCheckable="True" Header="Discount &gt; 20%" Click="MenuItem_ConditionalFormating_Click" CommandParameter="{StaticResource Condition3}"></MenuItem>
                            </ContextMenu>
                        </c1:C1ToolbarDropDown.Menu>
                    </c1:C1ToolbarDropDown>
                    <c1:C1ToolbarDropDown ToolTipService.ToolTip="Open" Margin="0,0,3,0">
                        <c1:C1ToolbarDropDown.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image  Source="/Showcase;component/Resources/Images/Columns.png" Height="20"/>
                                <Label Content=" Columns"></Label>
                            </StackPanel>
                        </c1:C1ToolbarDropDown.Header>
                        <c1:C1ToolbarDropDown.Menu >
                            <ContextMenu>
                                <MenuItem Header="ID" IsCheckable="True" IsChecked="True" Click="MenuItem_VisibleColumn_Click"/>
                                <MenuItem Header="Created Date" IsCheckable="True" IsChecked="True"  Click="MenuItem_VisibleColumn_Click"/>
                                <MenuItem Header="Product Name" IsCheckable="True" IsChecked="True" Click="MenuItem_VisibleColumn_Click"/>
                                <MenuItem Header="Country" IsCheckable="True" IsChecked="True"  Click="MenuItem_VisibleColumn_Click"/>
                                <MenuItem Header="Color" IsCheckable="True" IsChecked="True"  Click="MenuItem_VisibleColumn_Click"/>
                                <MenuItem Header="Change" IsCheckable="True" IsChecked="True"  Click="MenuItem_VisibleColumn_Click"/>
                                <MenuItem Header="History" IsCheckable="True" IsChecked="True"  Click="MenuItem_VisibleColumn_Click"/>
                                <MenuItem Header="Discount" IsCheckable="True" IsChecked="True"  Click="MenuItem_VisibleColumn_Click"/>
                                <MenuItem Header="Rating" IsCheckable="True" IsChecked="True" Click="MenuItem_VisibleColumn_Click"/>
                                <MenuItem Header="Price" IsCheckable="True" IsChecked="True"  Click="MenuItem_VisibleColumn_Click"/>
                                <MenuItem Header="Active" IsCheckable="True" IsChecked="True"  Click="MenuItem_VisibleColumn_Click"/>
                            </ContextMenu>
                        </c1:C1ToolbarDropDown.Menu>
                    </c1:C1ToolbarDropDown>
                </c1:C1SimplifiedRibbonGroup>
                <c1:C1SimplifiedRibbonGroup Header="Grouping" >
                    <c1:C1SimplifiedRibbonGroup.GroupSizeDefinitions>
                        <c1:C1ToolbarGroupSizeDefinition>
                            <c1:C1ToolbarControlSize>Large</c1:C1ToolbarControlSize>
                        </c1:C1ToolbarGroupSizeDefinition>
                    </c1:C1SimplifiedRibbonGroup.GroupSizeDefinitions>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <CheckBox Content="Group by Country" Margin="0,0,10,0" Command="{Binding GroupByCountry }" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"></CheckBox>
                        <CheckBox Content="Group by Product" Command="{Binding GroupByProduct }" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" ></CheckBox>
                    </StackPanel>
                </c1:C1SimplifiedRibbonGroup>
            </c1:C1SimplifiedTabItem>
            <c1:C1SimplifiedTabItem Header="Export" >
                <c1:C1SimplifiedRibbonGroup Header="Export">
                    <c1:C1SimplifiedRibbonGroup.GroupSizeDefinitions>
                        <c1:C1ToolbarGroupSizeDefinition>
                            <c1:C1ToolbarControlSize>Large</c1:C1ToolbarControlSize>
                        </c1:C1ToolbarGroupSizeDefinition>
                    </c1:C1SimplifiedRibbonGroup.GroupSizeDefinitions>
                    <c1:C1ToolbarButton LabelTitle="Csv" LargeImageSource="/Showcase;component/Resources/Images/csv.png" SmallImageSource="/Showcase;component/Resources/Images/csv.png"  Click="CsvExport_Click" />
                    <c1:C1ToolbarButton LabelTitle="Text" LargeImageSource="/Showcase;component/Resources/Images/text.png" SmallImageSource="/Showcase;component/Resources/Images/text.png" Click="TextExport_Click" />
                    <c1:C1ToolbarButton LabelTitle="Html" LargeImageSource="/Showcase;component/Resources/Images/html.png" SmallImageSource="/Showcase;component/Resources/Images/html.png" Click="HtmlExport_Click" />
                </c1:C1SimplifiedRibbonGroup>
            </c1:C1SimplifiedTabItem>
        </c1:C1SimplifiedRibbon>
        <c1:C1FlexGrid  x:Name="flexGrid" VerticalAlignment="Stretch"
                        ItemsSource="{Binding Products, Mode=TwoWay}"
                        AutoGenerateColumns="False"
                        HeaderFontWeight="Bold"
                        GridLinesVisibility="Horizontal"
                        MinRowHeight="30"
                        SelectionMode="Row"
                        AllowAddNew="False"
                        Grid.Row="2">
            <c1:C1FlexGrid.Columns>
                <c1:Column Binding="{Binding ID}" HorizontalAlignment="Left" VerticalAlignment="Center"  IsReadOnly="true" MinWidth="50" Width="0.5*"/>
                <c1:Column Binding="{Binding CreatedDate}" ColumnName="Created Date" Format="d" Header="Date" MinWidth="200" Width="*">
                    <c1:Column.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/Showcase;component/Resources/Images/datetime.png" Width="23" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                <TextBlock Text="{Binding CreatedDate, StringFormat='dd-MM-yyyy'}" VerticalAlignment="Center"   />
                            </StackPanel>
                        </DataTemplate>
                    </c1:Column.CellTemplate>
                    <c1:Column.CellEditingTemplate>
                        <DataTemplate>
                            <c1:C1DatePicker SelectedDate="{Binding CreatedDate , Mode=TwoWay}" Height="30"  />
                        </DataTemplate>
                    </c1:Column.CellEditingTemplate>
                </c1:Column>
                <c1:Column Binding="{Binding Name}" Header="Product" ColumnName="Product Name"  MinWidth="100" Width="*"/>
                <c1:Column Binding="{Binding Country.Name}" Header="Country" Width="200" ColumnName="Country" >
                    <c1:Column.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="4 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Image Source="{Binding Country.Image , IsAsync=True}" />
                                <TextBlock Grid.Column="1" Margin="4 0 0 0" VerticalAlignment="Center" Text="{Binding Country.Name}" />
                            </Grid>
                        </DataTemplate>
                    </c1:Column.CellTemplate>
                    <c1:Column.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox
               ItemsSource="{Binding Countries, Source={StaticResource viewmodel}}"
                SelectedValue="{Binding Country}"
                IsSynchronizedWithCurrentItem="False" >
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="25"/>
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Image Source="{Binding Image}" />
                                            <TextBlock Grid.Column="1" Margin="4 0 0 0" VerticalAlignment="Center" Text="{Binding Name}" />
                                        </Grid>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DataTemplate>
                    </c1:Column.CellEditingTemplate>
                </c1:Column>
                <c1:Column Binding="{Binding Color}" Header="Color" >
                    <c1:Column.CellTemplate>
                        <DataTemplate>
                            <Grid VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Width="20" Height="20" Fill="{Binding Color}"/>
                                <Label Margin="3,0" Content="{Binding Color}" Grid.Column="1"/>
                            </Grid>
                        </DataTemplate>
                    </c1:Column.CellTemplate>
                    <c1:Column.CellEditingTemplate>
                        <DataTemplate>
                            <c1:C1ColorPicker Mode="Basic" SelectedColor="{Binding Color , Mode=TwoWay , Converter={StaticResource ColorConverter}}" />
                        </DataTemplate>
                    </c1:Column.CellEditingTemplate>
                </c1:Column>
                <c1:Column Binding="{Binding Price}" Format="C" MinWidth="120" Width="*" HorizontalAlignment="Right" HeaderHorizontalAlignment="Right"/>
                <c1:Column Binding="{Binding History}" Header="Change" ColumnName="Change" IsReadOnly="True" MinWidth="80" Width="*" HorizontalAlignment="Center" HeaderHorizontalAlignment="Center">
                    <c1:Column.CellTemplate>
                        <DataTemplate>
                            <local:StockTicker Value="{Binding History}" BindingSource="History" Tag="{Binding}"  />
                        </DataTemplate>
                    </c1:Column.CellTemplate>
                </c1:Column>
                <c1:Column Binding="{Binding History}"  IsReadOnly="True" ColumnName="History" MinWidth="180" HorizontalAlignment="Center" HeaderHorizontalAlignment="Center">
                    <c1:Column.CellTemplate>
                        <DataTemplate>
                            <c1:C1Sparkline Data="{Binding Histories}" x:Name="_sparkLine" Grid.Column="3"
                                Width="120" ShowMarkers="True"                                           
                                MarkersColor="Red" SeriesColor="Gray"/>
                        </DataTemplate>
                    </c1:Column.CellTemplate>
                </c1:Column>
                <c1:Column Binding="{Binding Discount}" Header="Discount" ColumnName="Discount" HorizontalAlignment="Right" HeaderHorizontalAlignment="Left" MinWidth="160" VerticalAlignment="Center">
                    <c1:Column.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Discount, Converter={StaticResource DiscountConverter}}" HorizontalAlignment="Right" />
                        </DataTemplate>
                    </c1:Column.CellTemplate>
                </c1:Column>
                <c1:Column  Binding="{Binding Rating}"  Header="Rating" ColumnName="Rating" IsReadOnly="True" MinWidth="100" Width="*" HorizontalAlignment="Center" HeaderHorizontalAlignment="Center">
                    <c1:Column.CellTemplate>
                        <DataTemplate>
                            <local:RatingCell Rating="{Binding Rating}"  />
                        </DataTemplate>
                    </c1:Column.CellTemplate>
                </c1:Column>
                <c1:Column Binding="{Binding Active}" Header="Active" MinWidth="50" Width="*" HorizontalAlignment="Center" HeaderHorizontalAlignment="Center"/>
            </c1:C1FlexGrid.Columns>
            <c1:C1FlexGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Grid Margin="3">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Label Content="Size:"/>
                        <Label Content="{Binding Size}" Grid.Column="1"/>
                        <Label Content="Weight:" Grid.Row="1"/>
                        <Label Content="{Binding Weight}" Grid.Row="1" Grid.Column="1"/>
                        <Label Content="Quantity:" Grid.Row="2"/>
                        <Label Content="{Binding Quantity}" Grid.Row="2" Grid.Column="1"/>
                        <Label Content="Description:" Grid.Row="3" Margin="0,0,10,0"/>
                        <Label Content="{Binding Description}" Grid.Row="3" Grid.Column="1"/>
                    </Grid>
                </DataTemplate>
            </c1:C1FlexGrid.RowDetailsTemplate>
            <c1:C1FlexGridFilterService.FlexGridFilter>
                <c1:C1FlexGridFilter />
            </c1:C1FlexGridFilterService.FlexGridFilter>
            <c1:C1FlexGridFilterService.FullTextFilterBehavior>
                <c1:C1FullTextFilter FilterEntry="{Binding Source={x:Reference filter}}" />
            </c1:C1FlexGridFilterService.FullTextFilterBehavior>
        </c1:C1FlexGrid>
    </Grid>
</UserControl>
