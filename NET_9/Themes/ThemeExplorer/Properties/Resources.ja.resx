<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommonWPFControls" xml:space="preserve">
    <value>共通 WPF コントロール</value>
  </data>
  <data name="DataManagement" xml:space="preserve">
    <value>データ管理</value>
  </data>
  <data name="DataVisualization" xml:space="preserve">
    <value>データ視覚化</value>
  </data>
  <data name="InputEditing" xml:space="preserve">
    <value>入力＆編集</value>
  </data>
  <data name="NavigationLayout" xml:space="preserve">
    <value>ナビゲーション＆レイアウト</value>
  </data>
  <data name="ReportingDocuments" xml:space="preserve">
    <value>レポート＆ドキュメント</value>
  </data>
  <data name="Scheduling" xml:space="preserve">
    <value>スケジュール</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>テーマ: </value>
  </data>
  <data name="ThemeExplorer" xml:space="preserve">
    <value>テーマ エクスプローラ</value>
    <comment>Theme Explorer</comment>
  </data>
  <data name="Tag" xml:space="preserve">
    <value>WPF エディションには、スタイルの可能性を広げるプロフェッショナルなテーマが含まれています。</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>テーマ エクスプローラ</value>
  </data>
  <data name="Cell" xml:space="preserve">
    <value>セル</value>
    <comment>Cell</comment>
  </data>
  <data name="Document" xml:space="preserve">
    <value>ドキュメント</value>
    <comment>Document</comment>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>編集</value>
    <comment>Edit</comment>
  </data>
  <data name="Font" xml:space="preserve">
    <value>フォント</value>
    <comment>Font</comment>
  </data>
  <data name="Home" xml:space="preserve">
    <value>ホーム</value>
    <comment>Home</comment>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>挿入</value>
    <comment>Insert</comment>
  </data>
  <data name="LineNumber" xml:space="preserve">
    <value>行番号</value>
    <comment>Line Number</comment>
  </data>
  <data name="Merge" xml:space="preserve">
    <value>マージ</value>
    <comment>Merge</comment>
  </data>
  <data name="Paragraph" xml:space="preserve">
    <value>段落</value>
    <comment>Paragraph</comment>
  </data>
  <data name="RowsAndColumns" xml:space="preserve">
    <value>行および列</value>
    <comment>Rows And Columns</comment>
  </data>
  <data name="Table" xml:space="preserve">
    <value>表</value>
    <comment>Table</comment>
  </data>
  <data name="Tables" xml:space="preserve">
    <value>表</value>
    <comment>Tables</comment>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>ツール</value>
    <comment>Tools</comment>
  </data>
  <data name="View" xml:space="preserve">
    <value>表示</value>
    <comment>View</comment>
  </data>
  <data name="Zoom" xml:space="preserve">
    <value>ズーム</value>
    <comment>Zoom</comment>
  </data>
  <data name="Expander" xml:space="preserve">
    <value>Expander</value>
    <comment>Expander</comment>
  </data>
  <data name="Expander_content" xml:space="preserve">
    <value>これは Expander のコンテンツです</value>
    <comment>This is the Expander content</comment>
  </data>
  <data name="GroupBox" xml:space="preserve">
    <value>GroupBox</value>
    <comment>Group Box</comment>
  </data>
  <data name="GroupBox_content" xml:space="preserve">
    <value>これは GroupBox のコンテンツです</value>
    <comment>This is the GroupBox content</comment>
  </data>
  <data name="BarCode" xml:space="preserve">
    <value>バーコード</value>
    <comment>Bar Code</comment>
  </data>
  <data name="BarcodeType" xml:space="preserve">
    <value>バーコードタイプの選択:</value>
    <comment>Select Barcode Type:</comment>
  </data>
  <data name="BarCodeDescription" xml:space="preserve">
    <value>バーコードタイプの説明:</value>
    <comment>Bar Code Type Description:</comment>
  </data>
  <data name="BarcodeImage" xml:space="preserve">
    <value>バーコード画像の再生成</value>
    <comment>Regenerate Barcode Image</comment>
  </data>
  <data name="Data" xml:space="preserve">
    <value>データ:</value>
    <comment>Data:</comment>
  </data>
  <data name="FlexChart" xml:space="preserve">
    <value>FlexChart</value>
  </data>
  <data name="FlexPie" xml:space="preserve">
    <value>FlexPie</value>
  </data>
  <data name="Gauge" xml:space="preserve">
    <value>Gauge</value>
  </data>
  <data name="Sparkline" xml:space="preserve">
    <value>Sparkline</value>
  </data>
  <data name="C1WindowText" xml:space="preserve">
    <value>これは C1Window のテキストです</value>
  </data>
  <data name="C1Window" xml:space="preserve">
    <value>C1Window</value>
  </data>
  <data name="Occupation" xml:space="preserve">
    <value>職業</value>
    <comment>Occupation</comment>
  </data>
  <data name="Age" xml:space="preserve">
    <value>年齢</value>
    <comment>Age</comment>
  </data>
  <data name="DOB" xml:space="preserve">
    <value>DOB</value>
    <comment>DOB</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名前</value>
    <comment>Name</comment>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
    <comment>Male</comment>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>性別</value>
    <comment>Gender</comment>
  </data>
  <data name="FilterEditor" xml:space="preserve">
    <value>フィルターエディター</value>
    <comment>Filter Editor</comment>
  </data>
  <data name="DataPager" xml:space="preserve">
    <value>データページャー</value>
    <comment>Data Pager</comment>
  </data>
  <data name="RulesManager" xml:space="preserve">
    <value>RulesManager</value>
  </data>
  <data name="DataFilter" xml:space="preserve">
    <value>データフィルター</value>
    <comment>Data Filter</comment>
  </data>
  <data name="FlexPivot" xml:space="preserve">
    <value>FlexPivot</value>
  </data>
  <data name="CheckBox" xml:space="preserve">
    <value>CheckBox</value>
  </data>
  <data name="RadioButton" xml:space="preserve">
    <value>RadioButton</value>
  </data>
  <data name="Button" xml:space="preserve">
    <value>Button</value>
  </data>
  <data name="Togglebutton" xml:space="preserve">
    <value>Toggle button</value>
  </data>
  <data name="TextBox" xml:space="preserve">
    <value>TextBox: </value>
  </data>
  <data name="SchedulerView" xml:space="preserve">
    <value>スケジューラビュー:</value>
    <comment>Scheduler View:</comment>
  </data>
  <data name="EnableGrouping" xml:space="preserve">
    <value>グループ化を有効にする</value>
    <comment>Enable Grouping</comment>
  </data>
  <data name="Showweektabs" xml:space="preserve">
    <value>週タブの表示</value>
    <comment>Show week tabs</comment>
  </data>
  <data name="FlexGrid" xml:space="preserve">
    <value>FlexGrid</value>
  </data>
  <data name="ListView" xml:space="preserve">
    <value>ListView</value>
  </data>
  <data name="ViewType_Month" xml:space="preserve">
    <value>月</value>
    <comment>Month</comment>
  </data>
  <data name="ViewType_Day" xml:space="preserve">
    <value>日</value>
    <comment>Day</comment>
  </data>
  <data name="ViewType_Week" xml:space="preserve">
    <value>週</value>
    <comment>Week</comment>
  </data>
  <data name="ViewType_WorkingWeek" xml:space="preserve">
    <value>稼働日</value>
    <comment>WorkingWeek</comment>
  </data>
  <data name="ViewType_TimeLine" xml:space="preserve">
    <value>タイムライン</value>
    <comment>TimeLine</comment>
  </data>
  <data name="Clickme" xml:space="preserve">
    <value>クリックしてください！</value>
    <comment>Click me!</comment>
  </data>
  <data name="DefaultButton" xml:space="preserve">
    <value>デフォルトボタン</value>
    <comment>Default Button</comment>
  </data>
  <data name="Toggleme" xml:space="preserve">
    <value>切り替えてください！</value>
  </data>
  <data name="Placeholder" xml:space="preserve">
    <value>何か入力してください</value>
    <comment>Please type something</comment>
  </data>
  <data name="Readonly" xml:space="preserve">
    <value>読み取り専用 TextBoxBase</value>
    <comment>Readonly TextBoxBase</comment>
  </data>
  <data name="Readonly_TextBox" xml:space="preserve">
    <value>読み取り専用 TextBox</value>
    <comment>Readonly TextBox</comment>
  </data>
  <data name="CheckMe" xml:space="preserve">
    <value>チェックしてください！</value>
    <comment>Check Me!</comment>
  </data>
  <data name="Followme" xml:space="preserve">
    <value>フォローしてください！</value>
    <comment>Follow me!</comment>
  </data>
  <data name="On" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>Off</value>
  </data>
</root>