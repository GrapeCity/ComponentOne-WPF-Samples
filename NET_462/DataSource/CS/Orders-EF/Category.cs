//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Orders
{
    using System;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    
    public partial class Category : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;
    	protected void OnPropertyChanged(string propertyName)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    
        public Category()
        {
            this.Products = new ObservableCollection<Product>();
        }
    
        int _CategoryID;
        public int CategoryID 
        {
            get { return _CategoryID; }
            set
            {
                _CategoryID = value;
                OnPropertyChanged("CategoryID");
            }
        }
        string _CategoryName;
        public string CategoryName 
        {
            get { return _CategoryName; }
            set
            {
                _CategoryName = value;
                OnPropertyChanged("CategoryName");
            }
        }
        string _Description;
        public string Description 
        {
            get { return _Description; }
            set
            {
                _Description = value;
                OnPropertyChanged("Description");
            }
        }
        byte[] _Picture;
        public byte[] Picture 
        {
            get { return _Picture; }
            set
            {
                _Picture = value;
                OnPropertyChanged("Picture");
            }
        }
    
        public virtual ObservableCollection<Product> Products { get; set; }
    }
}
