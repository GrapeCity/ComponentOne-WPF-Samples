<Application x:Class="Orders.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Application.Resources>

        <LinearGradientBrush x:Key="Brush_HeaderBackground" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#66000088" Offset="0" />
            <GradientStop Color="#BB000088" Offset="1" />
        </LinearGradientBrush>

        <!-- PrettierDataGridStyle mostly borrowed from Andy McMullan's blog,
             http://www.andymcm.com/blog/2009/10/wpf-toolkit-datagrid-is-uggo.html -->        
            <Style x:Key="PrettierDataGridStyle" TargetType="{x:Type DataGrid}">

                <!-- Make the border and grid lines a little less imposing -->
                <Setter Property="BorderBrush" Value="#DDDDDD" />
                <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
                <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />

                <Setter Property="RowStyle">
                    <Setter.Value>
                    <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <!-- Highlight a grid row as the mouse passes over [Andy finds it pleasing, but I don't]
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Lavender" />
                                </Trigger> -->
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>


                <Setter Property="CellStyle">
                    <Setter.Value>
                    <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <!-- Highlight selected rows -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Lavender" />
                                    <Setter Property="BorderBrush" Value="Lavender" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                            </Style.Triggers>

                            <!-- Add some padding around the contents of a cell -->
                            <Setter Property="Padding" Value="4,3,4,3" />
                            <Setter Property="Template">
                                <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                        <Border Padding="{TemplateBinding Padding}" 
                                    Background="{TemplateBinding Background}">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

    </Application.Resources>
</Application>
