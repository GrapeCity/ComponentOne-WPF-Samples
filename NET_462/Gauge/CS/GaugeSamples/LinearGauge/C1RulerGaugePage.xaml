<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="GaugeSamples.C1RulerGaugePage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml" xmlns:local="clr-namespace:GaugeSamples" xmlns:helpers="clr-namespace:Helpers" xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/GaugeSamples.4;component/CommonResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <sys:Double x:Key="gaugeWidth">80</sys:Double>
            <sys:Double x:Key="gaugeHeight">350</sys:Double>
			<!--***************** SCROLL *****************-->

		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
    		<Setter Property="OverridesDefaultStyle" Value="true" />
    		<Setter Property="IsTabStop" Value="false" />
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Thumb}">
    					<Rectangle x:Name="Background" Fill="#FFA8A8A8" StrokeThickness="1" Stroke="White" Opacity="0.6" />
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>

        <Style x:Key="GralScrollBar" TargetType="{x:Type ScrollBar}">
    		<Setter Property="Background" Value="Transparent" />
    		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    		<Setter Property="Stylus.IsFlicksEnabled" Value="false" />
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    		<Setter Property="Width" Value="8" />
    		<Setter Property="MinWidth" Value="8" />
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ScrollBar}">
    					<Grid x:Name="Bg" Background="Transparent" SnapsToDevicePixels="true">
    						<Grid.RowDefinitions>
    							<RowDefinition Height="Auto" />
    							<RowDefinition Height="0.00001*" />
    							<RowDefinition Height="Auto" />
    						</Grid.RowDefinitions>
    						<RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Visibility="Collapsed" />
    						<Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
    							<Track.DecreaseRepeatButton>
    								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Opacity="0" />
    							</Track.DecreaseRepeatButton>
    							<Track.IncreaseRepeatButton>
    								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Opacity="0" />
    							</Track.IncreaseRepeatButton>
    							<Track.Thumb>
    								<Thumb Cursor="Hand" Style="{StaticResource ScrollBarThumb}" />
    							</Track.Thumb>
    						</Track>
    						<RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Visibility="Collapsed" />
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Style.Triggers>
    			<Trigger Property="Orientation" Value="Horizontal">
    				<Setter Property="Width" Value="Auto" />
    				<Setter Property="MinWidth" Value="0" />
    				<Setter Property="Height" Value="8" />
    				<Setter Property="MinHeight" Value="8" />
    				<Setter Property="Background" Value="Transparent" />
    				<Setter Property="Template">
    					<Setter.Value>
    						<ControlTemplate TargetType="{x:Type ScrollBar}">
    							<Grid x:Name="Bg" Background="Transparent" SnapsToDevicePixels="true">
    								<Grid.ColumnDefinitions>
    									<ColumnDefinition Width="Auto" />
    									<ColumnDefinition Width="0.00001*" />
    									<ColumnDefinition Width="Auto" />
    								</Grid.ColumnDefinitions>
    								<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Visibility="Collapsed" />
    								<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
    									<Track.DecreaseRepeatButton>
    										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Opacity="0" />
    									</Track.DecreaseRepeatButton>
    									<Track.IncreaseRepeatButton>
    										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Opacity="0" />
    									</Track.IncreaseRepeatButton>
    									<Track.Thumb>
    										<Thumb Cursor="Hand" Style="{StaticResource ScrollBarThumb}" />
    									</Track.Thumb>
    								</Track>
    								<RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Visibility="Collapsed" />
    							</Grid>
    						</ControlTemplate>
    					</Setter.Value>
    				</Setter>
    			</Trigger>
    		</Style.Triggers>
    	</Style>

        <Style x:Key="GralScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="BorderThickness" Value="0" />
			<Setter Property="Margin" Value="0 -8 -8 -8" />
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ScrollViewer}">
        				<Grid x:Name="Grid" Background="{TemplateBinding Background}">
        					<Grid.ColumnDefinitions>
        						<ColumnDefinition Width="*" />
        						<ColumnDefinition Width="Auto" />
        					</Grid.ColumnDefinitions>
        					<Grid.RowDefinitions>
        						<RowDefinition Height="*" />
        						<RowDefinition Height="Auto" />
        					</Grid.RowDefinitions>
        					<Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1" />
        					<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" />
        					<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource GralScrollBar}" />
        					<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource GralScrollBar}" />
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
		</Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="270" />
        </Grid.ColumnDefinitions>
        <!-- Property Editors -->
        <Border Grid.Column="1">
            <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalAlignment="Center" Style="{StaticResource GralScrollViewer}">
                <WrapPanel ItemWidth="260">
                    <!-- Value property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="Value:" Width="150" />
                        <c1:C1NumericBox Value="{Binding Value, ElementName=linearGauge, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource inputStyle}" AllowNull="True" />
                    </StackPanel>

                    <!-- Minimum property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="Minimum:" Width="150" />
                        <c1:C1NumericBox Value="{Binding Minimum, ElementName=linearGauge, Mode=TwoWay}" Style="{DynamicResource inputStyle}" />
                    </StackPanel>

                    <!-- Maximum property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="Maximum:" Width="150" />
                        <c1:C1NumericBox Value="{Binding Maximum, ElementName=linearGauge, Mode=TwoWay}" Style="{DynamicResource inputStyle}" />
                    </StackPanel>

                    <!-- Orientation property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="Orientation:" Width="150" />
                        <ComboBox SelectedItem="{Binding Orientation, ElementName=linearGauge, Mode=TwoWay}" ItemsSource="{Binding Orientation, ElementName=linearGauge, Mode=OneWay,                                     Converter={x:Static helpers:GetEnumMembersConverter.Default}}" SelectionChanged="Orientation_ComboBox_SelectionChanged" Style="{DynamicResource inputStyle}" />
                    </StackPanel>

                    <!-- XAxisLocation property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="XAxisLocation:" Width="150" />
                        <DockPanel Style="{DynamicResource inputStyle}">
                            <TextBlock VerticalAlignment="Center" Text="{Binding XAxisLocation, ElementName=linearGauge,                                                 StringFormat=0.00}" Style="{DynamicResource sliderValueStyle}" />
                            <Slider Value="{Binding XAxisLocation, ElementName=linearGauge, Mode=TwoWay}" Minimum="0" Maximum="5" Style="{DynamicResource sliderStyle}" />
                        </DockPanel>
                    </StackPanel>

                    <!-- XAxisLength property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="XAxisLength:" Width="150" />
                        <DockPanel Style="{DynamicResource inputStyle}">
                            <TextBlock VerticalAlignment="Center" Text="{Binding XAxisLength, ElementName=linearGauge,                                                 StringFormat=0.00}" Style="{DynamicResource sliderValueStyle}" />
                            <Slider Value="{Binding XAxisLength, ElementName=linearGauge, Mode=TwoWay}" Minimum="0" Maximum="5" Style="{DynamicResource sliderStyle}" />
                        </DockPanel>
                    </StackPanel>

                    <!-- YAxisLocation property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="YAxisLocation:" Width="150" />
                        <DockPanel Style="{DynamicResource inputStyle}">
                            <TextBlock VerticalAlignment="Center" Text="{Binding YAxisLocation, ElementName=linearGauge,                                                 StringFormat=0.00}" Style="{DynamicResource sliderValueStyle}" />
                            <Slider Value="{Binding YAxisLocation, ElementName=linearGauge, Mode=TwoWay}" Minimum="0" Maximum="5" Style="{DynamicResource sliderStyle}" />
                        </DockPanel>
                    </StackPanel>

                    <!-- OffLocation property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="OffLocation:" Width="150" />
                        <DockPanel Style="{DynamicResource inputStyle}">
                            <TextBlock VerticalAlignment="Center" Text="{Binding OffLocation, ElementName=linearGauge,                                                 StringFormat=0.00}" Style="{DynamicResource sliderValueStyle}" />
                            <Slider Value="{Binding OffLocation, ElementName=linearGauge, Mode=TwoWay}" Minimum="0" Maximum="5" Style="{DynamicResource sliderStyle}" />
                        </DockPanel>
                    </StackPanel>

                    <!-- IsLogarithmic property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="IsLogarithmic:" Width="150" />
                        <CheckBox IsChecked="{Binding IsLogarithmic, ElementName=linearGauge, Mode=TwoWay}" Style="{DynamicResource inputStyle}" />
                    </StackPanel>

                    <!-- LogarithmicBase property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="LogarithmicBase:" Width="150" />
                        <DockPanel Style="{DynamicResource inputStyle}">
                            <TextBlock VerticalAlignment="Center" Text="{Binding LogarithmicBase, ElementName=linearGauge,                                                 StringFormat=0}" Style="{DynamicResource sliderValueStyle}" />
                            <Slider Value="{Binding LogarithmicBase, ElementName=linearGauge, Mode=TwoWay}" Minimum="2" Maximum="100" Style="{DynamicResource sliderStyle}" />
                        </DockPanel>
                    </StackPanel>

                    <!-- DecoratorsVisibility property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="DecoratorsVisibility:" Width="150" />
                        <ComboBox SelectedItem="{Binding DecoratorsVisibility, ElementName=linearGauge, Mode=TwoWay}" ItemsSource="{Binding DecoratorsVisibility, ElementName=linearGauge, Mode=OneWay,                                     Converter={x:Static helpers:GetEnumMembersConverter.Default}}" Style="{DynamicResource inputStyle}" />
                    </StackPanel>

                    <!-- AutoDetectMarkTemplates property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="AutoDetectMarkTemplates:" Width="150" />
                        <CheckBox IsChecked="{Binding AutoDetectMarkTemplates, ElementName=linearGauge, Mode=TwoWay}" Style="{DynamicResource inputStyle}" />
                    </StackPanel>

                    <!-- Background property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="Background:" Width="150" />
                        <ComboBox Style="{DynamicResource colorComboStyle}" SelectedItem="{Binding Background, ElementName=linearGauge, Mode=TwoWay}" />
                    </StackPanel>

                    <!-- BorderBrush property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="BorderBrush:" Width="150" />
                        <ComboBox Style="{DynamicResource colorComboStyle}" SelectedItem="{Binding BorderBrush, ElementName=linearGauge, Mode=TwoWay}" />
                    </StackPanel>

                    <!-- BorderThickness property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="BorderThickness:" Width="150" />
                        <TextBox Text="{Binding BorderThickness, ElementName=linearGauge, Mode=TwoWay,                                         Converter={x:Static helpers:ThicknessToStringConverter.Default},                                         UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource inputStyle}" />
                    </StackPanel>

                    <!-- PointerLength property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="PointerLength:" Width="150" />
                        <DockPanel Style="{DynamicResource inputStyle}">
                            <TextBlock VerticalAlignment="Center" Text="{Binding PointerLength, ElementName=linearGauge,                                                 StringFormat=0.00}" Style="{DynamicResource sliderValueStyle}" />
                            <Slider Value="{Binding PointerLength, ElementName=linearGauge, Mode=TwoWay}" Minimum="0" Maximum="2" Style="{DynamicResource sliderStyle}" />
                        </DockPanel>
                    </StackPanel>

                    <!-- PointerWidth property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="PointerWidth:" Width="150" />
                        <DockPanel Style="{DynamicResource inputStyle}">
                            <TextBlock VerticalAlignment="Center" Text="{Binding PointerWidth, ElementName=linearGauge,                                                 StringFormat=0.00}" Style="{DynamicResource sliderValueStyle}" />
                            <Slider Value="{Binding PointerWidth, ElementName=linearGauge, Mode=TwoWay}" Minimum="0" Maximum="2" Style="{DynamicResource sliderStyle}" />
                        </DockPanel>
                    </StackPanel>


                    <!-- PointerOffset property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="PointerOffset:" Width="150" />
                        <DockPanel Style="{DynamicResource inputStyle}">
                            <TextBlock VerticalAlignment="Center" Text="{Binding PointerOffset, ElementName=linearGauge,                                                 StringFormat=0.00}" Style="{DynamicResource sliderValueStyle}" />
                            <Slider Value="{Binding PointerOffset, ElementName=linearGauge, Mode=TwoWay}" Minimum="-2" Maximum="2" Style="{DynamicResource sliderStyle}" />
                        </DockPanel>
                    </StackPanel>

                    <!-- PointerVisibility property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="PointerVisibility:" Width="150" />
                        <ComboBox SelectedItem="{Binding PointerVisibility, ElementName=linearGauge, Mode=TwoWay}" ItemsSource="{Binding PointerVisibility, ElementName=linearGauge, Mode=OneWay,                                     Converter={x:Static helpers:GetEnumMembersConverter.Default}}" Style="{DynamicResource inputStyle}" />
                    </StackPanel>

                    <!-- PointerFill property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="PointerFill:" Width="150" />
                        <ComboBox Style="{DynamicResource colorComboStyle}" SelectedItem="{Binding PointerFill, ElementName=linearGauge, Mode=TwoWay}" />
                    </StackPanel>

                    <!-- PointerStroke property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="PointerStroke:" Width="150" />
                        <ComboBox Style="{DynamicResource colorComboStyle}" SelectedItem="{Binding PointerStroke, ElementName=linearGauge, Mode=TwoWay}" />
                    </StackPanel>

                    <!-- PointerStrokeThickness property editor -->
                    <StackPanel Style="{DynamicResource captionInputContainer}">
                        <TextBlock VerticalAlignment="Center" Text="PointerStrokeThickness:" Width="150" />
                        <c1:C1NumericBox Value="{Binding PointerStrokeThickness, ElementName=linearGauge, Mode=TwoWay,                                                 UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource inputStyle}" />
                    </StackPanel>

                </WrapPanel>
            </ScrollViewer>
        </Border>

        <!-- The control -->
        <Border Padding="10">
            <c1:C1RulerGauge Width="{StaticResource gaugeWidth}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="{StaticResource gaugeHeight}" Name="linearGauge" Orientation="Vertical" XAxisLocation="0.1" XAxisLength="0.8" YAxisLocation="0.5" Value="37" Margin="20" BorderBrush="#BEBEBE" BorderThickness="2" Background="#ABD0ED" PointerFill="#FCC989">
                <c1:C1GaugeMark Interval="20" />
                <c1:C1GaugeMark Interval="10" />
                <c1:C1GaugeMark Interval="5" />
                <c1:C1GaugeLabel Interval="20" Format="n0" Alignment="Out" AlignmentOffset="8" />
            </c1:C1RulerGauge>
        </Border>

    </Grid>
</UserControl>