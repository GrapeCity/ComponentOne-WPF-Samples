<UserControl x:Class="FlexGridExplorer.Financial"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml"
             xmlns:res="clr-namespace:FlexGridExplorer.Resources"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:FlexGridExplorer"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="SearchBoxStyle" TargetType="{x:Type c1:C1TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="MouseOverBorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="1 1 2 2"/>
            <Setter Property="CornerRadius" Value="14"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FocusBrush" Value="DarkGray"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type c1:C1TextBox}">
                        <Grid x:Name="RootElement">
                            <Grid.Resources>
                                <c1:BindingProxy x:Key="MouseOverBorderBrushProxy" Data="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <c1:VisibilityConverter x:Key="visibilityConverter"/>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{Binding Data, Source={StaticResource MouseOverBorderBrushProxy}}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReadOnly"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <c1:C1Border x:Name="Root" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <c1:C1PathIcon Margin="6 0 0 0" Width="15" Height="15" Data="M24.027,46.333c-4.32,16.125-2.103,32.968,6.244,47.426c11.132,19.281,31.892,31.259,54.178,31.259  c8.411,0,16.745-1.729,24.474-5.03l32.507,56.303l12.99-7.5l-32.508-56.305c11.174-8.353,19.19-20.117,22.856-33.802  c4.32-16.125,2.103-32.968-6.244-47.426C127.393,11.978,106.633,0,84.347,0C73.435,0,62.647,2.899,53.148,8.383  C38.69,16.73,28.349,30.208,24.027,46.333z M84.347,15c16.944,0,32.727,9.104,41.188,23.759c6.344,10.988,8.029,23.789,4.745,36.044  c-3.283,12.255-11.143,22.499-22.131,28.842c-7.222,4.169-15.416,6.373-23.699,6.373c-16.944,0-32.727-9.104-41.188-23.759  c-6.344-10.988-8.029-23.788-4.745-36.043C41.801,37.96,49.66,27.717,60.648,21.373C67.87,17.204,76.064,15,84.347,15z"/>
                                    <Grid Grid.Column="1">
                                        <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Padding="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <TextBlock x:Name="Placeholder" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0.65" Padding="2 0" Text="{TemplateBinding Placeholder}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding IsPlaceholderVisible, Converter={StaticResource visibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Grid>
                                    <ContentControl x:Name="clear" ContentTemplate="{x:Static c1:C1IconTemplate.Close}" Margin="0 0 6 0" Width="15" Height="15" Grid.Column="2" MouseLeftButtonDown="OnClearFilter"/>
                                </Grid>
                            </c1:C1Border>
                            <c1:C1Border x:Name="FocusedVisualElement" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding FocusBrush}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0"/>
                            <c1:C1Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding CornerRadius}" IsHitTestVisible="False" Opacity="0"/>
                            <c1:C1ValidationDecorator x:Name="ValidationDecorator" CornerRadius="{TemplateBinding CornerRadius}" Style="{TemplateBinding ValidationDecoratorStyle}" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="excelBlue" TargetType="c1:FlexGrid">
            <Setter Property="HeadersVisibility" Value="All"/>
            <Setter Property="DefaultColumnHeaderRowHeight" Value="28"/>
            <Setter Property="DefaultRowHeight" Value="28"/>
            <Setter Property="CellPadding" Value="4"/>
            <Setter Property="BorderBrush" Value="#FFA3AEB9"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ShowMarquee" Value="True"/>
            <Setter Property="RowBackground" Value="Transparent"/>
            <Setter Property="AlternatingRowBackground" Value="Transparent"/>
            <Setter Property="CursorBackground" Value="Transparent"/>
            <Setter Property="EditorBackground" Value="Transparent"/>
            <Setter Property="TopLeftHeaderBackground" Value="#FFA9C4E9"/>
            <Setter Property="RowHeaderBackground" Value="#FFE4ECF7"/>
            <Setter Property="RowHeaderSelectedBackground" Value="#FFFFD58D"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="GridLinesBrush" Value="#FFD0D7E5"/>
            <Setter Property="ColumnHeaderGridLinesVisibility" Value="All"/>
            <Setter Property="ColumnHeaderGridLinesBrush" Value="#FF9EB6CE"/>
            <Setter Property="RowHeaderGridLinesVisibility" Value="All"/>
            <Setter Property="RowHeaderGridLinesBrush" Value="#FF9EB6CE"/>
            <Setter Property="TopLeftHeaderGridLinesVisibility" Value="All"/>
            <Setter Property="TopLeftHeaderGridLinesBrush" Value="#FF9EB6CE"/>
            <Setter Property="SelectionBackground" Value="#FFEAECF5"/>
            <Setter Property="ColumnHeaderSelectedBackground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1">
                        <GradientStop Color="#FFF8D79B" Offset="0"/>
                        <GradientStop Color="#FFF1C263" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="ColumnHeaderBackground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1">
                        <GradientStop Color="#FFF6FAFB" Offset="0"/>
                        <GradientStop Color="#FFD5DDEA" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <c1:C1Expander Header="Settings" ExpandDirection="Left" ExpandIconAlignment="Left" BorderThickness="0" Grid.Column="1" Grid.Row="1">
            <StackPanel Orientation="Vertical" Width="200" Margin="10,0,1,0">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Custom Cells:" VerticalAlignment="Center" Width="95" Margin="0,0,5,0" />
                    <CheckBox x:Name="_chkOwnerDrawFinancial" IsChecked="True" VerticalAlignment="Center" Click="_chkOwnerDrawFinancial_Click"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Auto Update:" VerticalAlignment="Center" Width="95" Margin="0,0,5,0" />
                    <CheckBox x:Name="_chkAutoUpdate" IsChecked="True" VerticalAlignment="Center" Click="_chkAutoUpdate_Click"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Update Interval:" VerticalAlignment="Center" Width="95" Margin="0,0,5,0"/>
                    <c1:C1ComboBox x:Name="_cmbUpdateInterval" Width="90" VerticalAlignment="Center"
                                   SelectionChanged="_cmbUpdateInterval_SelectionChanged">
                        <c1:C1ComboBoxItem Content="1000 ms" />
                        <c1:C1ComboBoxItem Content="500 ms" />
                    </c1:C1ComboBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="Batch Size: " VerticalAlignment="Center" Width="95" Margin="0,0,5,0" />
                    <c1:C1ComboBox x:Name="_cmbBatchSize" Width="90" VerticalAlignment="Center"
                                   SelectionChanged="_cmbBatchSize_SelectionChanged" >
                        <c1:C1ComboBoxItem Content="500 items" />
                        <c1:C1ComboBoxItem Content="100 items" />
                        <c1:C1ComboBoxItem Content="10 items" />
                        <c1:C1ComboBoxItem Content="1 item" />
                    </c1:C1ComboBox>
                </StackPanel>
            </StackPanel>
        </c1:C1Expander>
        <c1:FlexGrid x:Name="_flexFinancial"
                     Style="{StaticResource excelBlue}"
                     IsReadOnly="True"
                     MinColumnWidth="10" 
                     MaxColumnWidth="300"
                     AutoGenerateColumns="False" 
                     Grid.Row="2">
            <c1:FlexGrid.Columns>
                <c1:GridColumn Binding="Symbol" Width="100" />
                <c1:GridColumn Binding="Name" Width="250" />
                <c1:GridColumn Binding="Bid" Width="150" Format="n2" HorizontalAlignment="Right" />
                <c1:GridColumn Binding="Ask" Width="150" Format="n2" HorizontalAlignment="Right" />
                <c1:GridColumn Binding="LastSale" Width="150" Format="n2" HorizontalAlignment="Right" />
                <c1:GridColumn Binding="BidSize" Width="100" Format="n0" HorizontalAlignment="Right" />
                <c1:GridColumn Binding="AskSize" Width="100" Format="n0" HorizontalAlignment="Right" />
                <c1:GridColumn Binding="LastSize" Width="100" Format="n0" HorizontalAlignment="Right" />
                <c1:GridColumn Binding="Volume" Width="100" Format="n0" HorizontalAlignment="Right" />
                <c1:GridColumn Binding="QuoteTime" Width="100" Format="hh:mm:ss" HorizontalAlignment="Center" />
                <c1:GridColumn Binding="TradeTime" Width="100" Format="hh:mm:ss" HorizontalAlignment="Center" />
            </c1:FlexGrid.Columns>
            <i:Interaction.Behaviors>
                <c1:FullTextFilterBehavior FilterEntry="{Binding Source={x:Reference _srchCompanies}}"/>
            </i:Interaction.Behaviors>
        </c1:FlexGrid>
        <Grid Margin="10" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <c1:C1TextBox Style="{DynamicResource SearchBoxStyle}" x:Name="_srchCompanies" Width="200" HorizontalAlignment="Right" Grid.Column="0" Placeholder="{x:Static res:AppResources.Filter}" />
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                <TextBlock Text="Financial Info: " VerticalAlignment="Center"/>
                <TextBlock x:Name="_txtCompanies" Text="Companies" VerticalAlignment="Center"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
